name: Deploy

on:
  workflow_dispatch:
    inputs:
      deployables:
        description: 'api/workers/dispatch.yaml'
        default: 'api workers'
        required: true

jobs:
  deployment:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up gcloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Create worker.yaml
        shell: bash
        run:
          SERVICE_NAME=workers
          RESOLUTION_RUNNING_MODE=CNS_WORKER,ZNS_WORKER,MIGRATIONS
          RESOLUTION_POSTGRES_HOST=${{ secrets.RESOLUTION_POSTGRES_HOST }}
          RESOLUTION_POSTGRES_USERNAME=${{ secrets.RESOLUTION_POSTGRES_USERNAME
          }} RESOLUTION_POSTGRES_PASSWORD=${{
          secrets.RESOLUTION_POSTGRES_PASSWORD }} RESOLUTION_POSTGRES_URL=${{
          secrets.RESOLUTION_POSTGRES_URL }} GCP_SQL_INSTANCE=${{
          secrets.GCP_SQL_INSTANCE }} bash create-yaml.sh

      - name: Create api.yaml
        shell: bash
        run:
          SERVICE_NAME=api RESOLUTION_RUNNING_MODE=API
          RESOLUTION_POSTGRES_HOST=${{ secrets.RESOLUTION_POSTGRES_HOST }}
          RESOLUTION_POSTGRES_USERNAME=${{ secrets.RESOLUTION_POSTGRES_USERNAME
          }} RESOLUTION_POSTGRES_PASSWORD=${{
          secrets.RESOLUTION_POSTGRES_PASSWORD }} RESOLUTION_POSTGRES_URL=${{
          secrets.RESOLUTION_POSTGRES_URL }} GCP_SQL_INSTANCE=${{
          secrets.GCP_SQL_INSTANCE }} bash create-yaml.sh

      - name: Deploy API
        if: contains(github.event.inputs.deployables, 'api')
        run: gcloud app deploy api.yaml

      - name: Deploy WORKERS
        if: contains(github.event.inputs.deployables, 'workers')
        run: gcloud app deploy workers.yaml
